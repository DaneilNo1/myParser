终端机在文法中未使用

    T_BOOL
    LOP_ADDTO
    LOP_MINTO
    LOP_MULTO
    LOP_DIVTO
    CHAR
    BOOL
    STRING
    VOID
    FOR
    TRUE
    FALSE
    BITAND
    BITOR
    BITNOT
    SHL
    SHR
    LOP_EQ


状态 161 冲突：1 项偏移/归约


语法

    0 $accept: CompUnit $end

    1 CompUnit: Decl
    2         | FuncDef
    3         | CompUnit Decl
    4         | CompUnit FuncDef

    5 Decl: ConstDecl
    6     | VarDecl

    7 ConstDecl: CONST BType ConstDefs SEMICOLON

    8 BType: T_INT
    9      | T_CHAR
   10      | T_STRING

   11 ConstDefs: ConstDef
   12          | ConstDefs COMMA ConstDef

   13 ConstDef: IDENTIFIER LOP_ASSIGN ConstInitVal
   14         | IDENTIFIER ArrayIndexs LOP_ASSIGN ConstInitVal

   15 ArrayIndexs: ArrayIndex
   16            | ArrayIndexs ArrayIndex

   17 ArrayIndex: '[' ConstExp ']'

   18 ConstInitVals: ConstInitVal
   19              | ConstInitVals COMMA ConstInitVal

   20 ConstInitVal: ConstExp
   21             | LBRACE RBRACE
   22             | LBRACE ConstInitVals RBRACE

   23 VarDecl: BType VarDefs SEMICOLON

   24 VarDefs: VarDef
   25        | VarDefs COMMA VarDef

   26 VarDef: IDENTIFIER
   27       | IDENTIFIER ArrayIndexs
   28       | IDENTIFIER LOP_ASSIGN InitVal
   29       | IDENTIFIER ArrayIndexs LOP_ASSIGN InitVal

   30 InitVals: InitVal
   31         | InitVals COMMA InitVal

   32 InitVal: ConstExp
   33        | LBRACE RBRACE
   34        | LBRACE InitVals RBRACE

   35 FuncDef: BType IDENTIFIER LPAREN RPAREN Block
   36        | T_VOID IDENTIFIER LPAREN RPAREN Block
   37        | BType IDENTIFIER LPAREN FuncFParams RPAREN Block
   38        | T_VOID IDENTIFIER LPAREN FuncFParams RPAREN Block

   39 FuncFParams: FuncFParam
   40            | FuncFParams COMMA FuncFParam

   41 FuncFParam: BType IDENTIFIER
   42           | BType IDENTIFIER '[' ']'
   43           | BType IDENTIFIER '[' ']' ArrayIndexs

   44 Block: LBRACE BlockItems RBRACE
   45      | LBRACE RBRACE

   46 BlockItems: BlockItem
   47           | BlockItems BlockItem

   48 BlockItem: Decl
   49          | Stmt

   50 Stmt: LVal LOP_ASSIGN ConstExp SEMICOLON
   51     | SEMICOLON
   52     | ConstExp SEMICOLON
   53     | Block
   54     | IF LPAREN Cond RPAREN Stmt
   55     | IF LPAREN Cond RPAREN Stmt ELSE Stmt
   56     | WHILE LPAREN Cond RPAREN Stmt
   57     | BREAK SEMICOLON
   58     | CONTINUE SEMICOLON
   59     | RETURN SEMICOLON
   60     | RETURN ConstExp SEMICOLON

   61 Cond: LOrExp

   62 LVal: IDENTIFIER
   63     | IDENTIFIER ArrayIndexs

   64 PrimaryExp: LPAREN ConstExp RPAREN
   65           | LVal
   66           | Number

   67 Number: INTEGER

   68 UnaryExp: PrimaryExp
   69         | IDENTIFIER LPAREN RPAREN
   70         | IDENTIFIER LPAREN FuncRParams RPAREN
   71         | UnaryOp UnaryExp

   72 UnaryOp: ADD
   73        | MINUS
   74        | NOT

   75 FuncRParams: ConstExp
   76            | FuncRParams COMMA ConstExp

   77 MulExp: UnaryExp
   78       | MulExp MUL UnaryExp
   79       | MulExp DIV UnaryExp
   80       | MulExp MOD UnaryExp

   81 AddExp: MulExp
   82       | AddExp ADD MulExp
   83       | AddExp MINUS MulExp

   84 RelExp: AddExp
   85       | RelExp LS AddExp
   86       | RelExp GT AddExp
   87       | RelExp LE AddExp
   88       | RelExp GE AddExp

   89 EqExp: RelExp
   90      | EqExp EQ RelExp
   91      | EqExp NE RelExp

   92 LAndExp: EqExp
   93        | LAndExp AND EqExp

   94 LOrExp: LAndExp
   95       | LOrExp OR LAndExp

   96 ConstExp: AddExp


终结语词，附有它们出现处的规则

    $end (0) 0
    '[' (91) 17 42 43
    ']' (93) 17 42 43
    error (256)
    T_CHAR (258) 9
    T_INT (259) 8
    T_STRING (260) 10
    T_BOOL (261)
    T_VOID (262) 36 38
    SEMICOLON (263) 7 23 50 51 52 57 58 59 60
    LOP_ASSIGN (264) 13 14 28 29 50
    LOP_ADDTO (265)
    LOP_MINTO (266)
    LOP_MULTO (267)
    LOP_DIVTO (268)
    IDENTIFIER (269) 13 14 26 27 28 29 35 36 37 38 41 42 43 62 63 69 70
    INTEGER (270) 67
    CHAR (271)
    BOOL (272)
    STRING (273)
    VOID (274)
    CONST (275) 7
    IF (276) 54 55
    ELSE (277) 55
    FOR (278)
    WHILE (279) 56
    BREAK (280) 57
    CONTINUE (281) 58
    RETURN (282) 59 60
    TRUE (283)
    FALSE (284)
    ADD (285) 72 82
    MINUS (286) 73 83
    MUL (287) 78
    DIV (288) 79
    MOD (289) 80
    NOT (290) 74
    AND (291) 93
    OR (292) 95
    BITAND (293)
    BITOR (294)
    BITNOT (295)
    SHL (296)
    SHR (297)
    LS (298) 85
    GT (299) 86
    EQ (300) 90
    LE (301) 87
    GE (302) 88
    NE (303) 91
    COMMA (304) 12 19 25 31 40 76
    LBRACE (305) 21 22 33 34 44 45
    RBRACE (306) 21 22 33 34 44 45
    LPAREN (307) 35 36 37 38 54 55 56 64 69 70
    RPAREN (308) 35 36 37 38 54 55 56 64 69 70
    LOP_EQ (309)


非终结语词，附有它们出现处的规则

    $accept (57)
        on left: 0
    CompUnit (58)
        on left: 1 2 3 4
        on right: 0 3 4
    Decl (59)
        on left: 5 6
        on right: 1 3 48
    ConstDecl (60)
        on left: 7
        on right: 5
    BType (61)
        on left: 8 9 10
        on right: 7 23 35 37 41 42 43
    ConstDefs (62)
        on left: 11 12
        on right: 7 12
    ConstDef (63)
        on left: 13 14
        on right: 11 12
    ArrayIndexs (64)
        on left: 15 16
        on right: 14 16 27 29 43 63
    ArrayIndex (65)
        on left: 17
        on right: 15 16
    ConstInitVals (66)
        on left: 18 19
        on right: 19 22
    ConstInitVal (67)
        on left: 20 21 22
        on right: 13 14 18 19
    VarDecl (68)
        on left: 23
        on right: 6
    VarDefs (69)
        on left: 24 25
        on right: 23 25
    VarDef (70)
        on left: 26 27 28 29
        on right: 24 25
    InitVals (71)
        on left: 30 31
        on right: 31 34
    InitVal (72)
        on left: 32 33 34
        on right: 28 29 30 31
    FuncDef (73)
        on left: 35 36 37 38
        on right: 2 4
    FuncFParams (74)
        on left: 39 40
        on right: 37 38 40
    FuncFParam (75)
        on left: 41 42 43
        on right: 39 40
    Block (76)
        on left: 44 45
        on right: 35 36 37 38 53
    BlockItems (77)
        on left: 46 47
        on right: 44 47
    BlockItem (78)
        on left: 48 49
        on right: 46 47
    Stmt (79)
        on left: 50 51 52 53 54 55 56 57 58 59 60
        on right: 49 54 55 56
    Cond (80)
        on left: 61
        on right: 54 55 56
    LVal (81)
        on left: 62 63
        on right: 50 65
    PrimaryExp (82)
        on left: 64 65 66
        on right: 68
    Number (83)
        on left: 67
        on right: 66
    UnaryExp (84)
        on left: 68 69 70 71
        on right: 71 77 78 79 80
    UnaryOp (85)
        on left: 72 73 74
        on right: 71
    FuncRParams (86)
        on left: 75 76
        on right: 70 76
    MulExp (87)
        on left: 77 78 79 80
        on right: 78 79 80 81 82 83
    AddExp (88)
        on left: 81 82 83
        on right: 82 83 84 85 86 87 88 96
    RelExp (89)
        on left: 84 85 86 87 88
        on right: 85 86 87 88 89 90 91
    EqExp (90)
        on left: 89 90 91
        on right: 90 91 92 93
    LAndExp (91)
        on left: 92 93
        on right: 93 94 95
    LOrExp (92)
        on left: 94 95
        on right: 61 95
    ConstExp (93)
        on left: 96
        on right: 17 20 32 50 52 60 64 75 76


状态 0

    0 $accept: . CompUnit $end

    T_CHAR    偏移，并进入状态 1
    T_INT     偏移，并进入状态 2
    T_STRING  偏移，并进入状态 3
    T_VOID    偏移，并进入状态 4
    CONST     偏移，并进入状态 5

    CompUnit   转到状态 6
    Decl       转到状态 7
    ConstDecl  转到状态 8
    BType      转到状态 9
    VarDecl    转到状态 10
    FuncDef    转到状态 11


状态 1

    9 BType: T_CHAR .

    $default  使用规则 9 以归约 (BType)


状态 2

    8 BType: T_INT .

    $default  使用规则 8 以归约 (BType)


状态 3

   10 BType: T_STRING .

    $default  使用规则 10 以归约 (BType)


状态 4

   36 FuncDef: T_VOID . IDENTIFIER LPAREN RPAREN Block
   38        | T_VOID . IDENTIFIER LPAREN FuncFParams RPAREN Block

    IDENTIFIER  偏移，并进入状态 12


状态 5

    7 ConstDecl: CONST . BType ConstDefs SEMICOLON

    T_CHAR    偏移，并进入状态 1
    T_INT     偏移，并进入状态 2
    T_STRING  偏移，并进入状态 3

    BType  转到状态 13


状态 6

    0 $accept: CompUnit . $end
    3 CompUnit: CompUnit . Decl
    4         | CompUnit . FuncDef

    $end      偏移，并进入状态 14
    T_CHAR    偏移，并进入状态 1
    T_INT     偏移，并进入状态 2
    T_STRING  偏移，并进入状态 3
    T_VOID    偏移，并进入状态 4
    CONST     偏移，并进入状态 5

    Decl       转到状态 15
    ConstDecl  转到状态 8
    BType      转到状态 9
    VarDecl    转到状态 10
    FuncDef    转到状态 16


状态 7

    1 CompUnit: Decl .

    $default  使用规则 1 以归约 (CompUnit)


状态 8

    5 Decl: ConstDecl .

    $default  使用规则 5 以归约 (Decl)


状态 9

   23 VarDecl: BType . VarDefs SEMICOLON
   35 FuncDef: BType . IDENTIFIER LPAREN RPAREN Block
   37        | BType . IDENTIFIER LPAREN FuncFParams RPAREN Block

    IDENTIFIER  偏移，并进入状态 17

    VarDefs  转到状态 18
    VarDef   转到状态 19


状态 10

    6 Decl: VarDecl .

    $default  使用规则 6 以归约 (Decl)


状态 11

    2 CompUnit: FuncDef .

    $default  使用规则 2 以归约 (CompUnit)


状态 12

   36 FuncDef: T_VOID IDENTIFIER . LPAREN RPAREN Block
   38        | T_VOID IDENTIFIER . LPAREN FuncFParams RPAREN Block

    LPAREN  偏移，并进入状态 20


状态 13

    7 ConstDecl: CONST BType . ConstDefs SEMICOLON

    IDENTIFIER  偏移，并进入状态 21

    ConstDefs  转到状态 22
    ConstDef   转到状态 23


状态 14

    0 $accept: CompUnit $end .

    $default  接受


状态 15

    3 CompUnit: CompUnit Decl .

    $default  使用规则 3 以归约 (CompUnit)


状态 16

    4 CompUnit: CompUnit FuncDef .

    $default  使用规则 4 以归约 (CompUnit)


状态 17

   26 VarDef: IDENTIFIER .
   27       | IDENTIFIER . ArrayIndexs
   28       | IDENTIFIER . LOP_ASSIGN InitVal
   29       | IDENTIFIER . ArrayIndexs LOP_ASSIGN InitVal
   35 FuncDef: BType IDENTIFIER . LPAREN RPAREN Block
   37        | BType IDENTIFIER . LPAREN FuncFParams RPAREN Block

    LOP_ASSIGN  偏移，并进入状态 24
    LPAREN      偏移，并进入状态 25
    '['         偏移，并进入状态 26

    $default  使用规则 26 以归约 (VarDef)

    ArrayIndexs  转到状态 27
    ArrayIndex   转到状态 28


状态 18

   23 VarDecl: BType VarDefs . SEMICOLON
   25 VarDefs: VarDefs . COMMA VarDef

    SEMICOLON  偏移，并进入状态 29
    COMMA      偏移，并进入状态 30


状态 19

   24 VarDefs: VarDef .

    $default  使用规则 24 以归约 (VarDefs)


状态 20

   36 FuncDef: T_VOID IDENTIFIER LPAREN . RPAREN Block
   38        | T_VOID IDENTIFIER LPAREN . FuncFParams RPAREN Block

    T_CHAR    偏移，并进入状态 1
    T_INT     偏移，并进入状态 2
    T_STRING  偏移，并进入状态 3
    RPAREN    偏移，并进入状态 31

    BType        转到状态 32
    FuncFParams  转到状态 33
    FuncFParam   转到状态 34


状态 21

   13 ConstDef: IDENTIFIER . LOP_ASSIGN ConstInitVal
   14         | IDENTIFIER . ArrayIndexs LOP_ASSIGN ConstInitVal

    LOP_ASSIGN  偏移，并进入状态 35
    '['         偏移，并进入状态 26

    ArrayIndexs  转到状态 36
    ArrayIndex   转到状态 28


状态 22

    7 ConstDecl: CONST BType ConstDefs . SEMICOLON
   12 ConstDefs: ConstDefs . COMMA ConstDef

    SEMICOLON  偏移，并进入状态 37
    COMMA      偏移，并进入状态 38


状态 23

   11 ConstDefs: ConstDef .

    $default  使用规则 11 以归约 (ConstDefs)


状态 24

   28 VarDef: IDENTIFIER LOP_ASSIGN . InitVal

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LBRACE      偏移，并进入状态 44
    LPAREN      偏移，并进入状态 45

    InitVal     转到状态 46
    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    ConstExp    转到状态 54


状态 25

   35 FuncDef: BType IDENTIFIER LPAREN . RPAREN Block
   37        | BType IDENTIFIER LPAREN . FuncFParams RPAREN Block

    T_CHAR    偏移，并进入状态 1
    T_INT     偏移，并进入状态 2
    T_STRING  偏移，并进入状态 3
    RPAREN    偏移，并进入状态 55

    BType        转到状态 32
    FuncFParams  转到状态 56
    FuncFParam   转到状态 34


状态 26

   17 ArrayIndex: '[' . ConstExp ']'

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    ConstExp    转到状态 57


状态 27

   16 ArrayIndexs: ArrayIndexs . ArrayIndex
   27 VarDef: IDENTIFIER ArrayIndexs .
   29       | IDENTIFIER ArrayIndexs . LOP_ASSIGN InitVal

    LOP_ASSIGN  偏移，并进入状态 58
    '['         偏移，并进入状态 26

    $default  使用规则 27 以归约 (VarDef)

    ArrayIndex  转到状态 59


状态 28

   15 ArrayIndexs: ArrayIndex .

    $default  使用规则 15 以归约 (ArrayIndexs)


状态 29

   23 VarDecl: BType VarDefs SEMICOLON .

    $default  使用规则 23 以归约 (VarDecl)


状态 30

   25 VarDefs: VarDefs COMMA . VarDef

    IDENTIFIER  偏移，并进入状态 60

    VarDef  转到状态 61


状态 31

   36 FuncDef: T_VOID IDENTIFIER LPAREN RPAREN . Block

    LBRACE  偏移，并进入状态 62

    Block  转到状态 63


状态 32

   41 FuncFParam: BType . IDENTIFIER
   42           | BType . IDENTIFIER '[' ']'
   43           | BType . IDENTIFIER '[' ']' ArrayIndexs

    IDENTIFIER  偏移，并进入状态 64


状态 33

   38 FuncDef: T_VOID IDENTIFIER LPAREN FuncFParams . RPAREN Block
   40 FuncFParams: FuncFParams . COMMA FuncFParam

    COMMA   偏移，并进入状态 65
    RPAREN  偏移，并进入状态 66


状态 34

   39 FuncFParams: FuncFParam .

    $default  使用规则 39 以归约 (FuncFParams)


状态 35

   13 ConstDef: IDENTIFIER LOP_ASSIGN . ConstInitVal

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LBRACE      偏移，并进入状态 67
    LPAREN      偏移，并进入状态 45

    ConstInitVal  转到状态 68
    LVal          转到状态 47
    PrimaryExp    转到状态 48
    Number        转到状态 49
    UnaryExp      转到状态 50
    UnaryOp       转到状态 51
    MulExp        转到状态 52
    AddExp        转到状态 53
    ConstExp      转到状态 69


状态 36

   14 ConstDef: IDENTIFIER ArrayIndexs . LOP_ASSIGN ConstInitVal
   16 ArrayIndexs: ArrayIndexs . ArrayIndex

    LOP_ASSIGN  偏移，并进入状态 70
    '['         偏移，并进入状态 26

    ArrayIndex  转到状态 59


状态 37

    7 ConstDecl: CONST BType ConstDefs SEMICOLON .

    $default  使用规则 7 以归约 (ConstDecl)


状态 38

   12 ConstDefs: ConstDefs COMMA . ConstDef

    IDENTIFIER  偏移，并进入状态 21

    ConstDef  转到状态 71


状态 39

   62 LVal: IDENTIFIER .
   63     | IDENTIFIER . ArrayIndexs
   69 UnaryExp: IDENTIFIER . LPAREN RPAREN
   70         | IDENTIFIER . LPAREN FuncRParams RPAREN

    LPAREN  偏移，并进入状态 72
    '['     偏移，并进入状态 26

    $default  使用规则 62 以归约 (LVal)

    ArrayIndexs  转到状态 73
    ArrayIndex   转到状态 28


状态 40

   67 Number: INTEGER .

    $default  使用规则 67 以归约 (Number)


状态 41

   72 UnaryOp: ADD .

    $default  使用规则 72 以归约 (UnaryOp)


状态 42

   73 UnaryOp: MINUS .

    $default  使用规则 73 以归约 (UnaryOp)


状态 43

   74 UnaryOp: NOT .

    $default  使用规则 74 以归约 (UnaryOp)


状态 44

   33 InitVal: LBRACE . RBRACE
   34        | LBRACE . InitVals RBRACE

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LBRACE      偏移，并进入状态 44
    RBRACE      偏移，并进入状态 74
    LPAREN      偏移，并进入状态 45

    InitVals    转到状态 75
    InitVal     转到状态 76
    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    ConstExp    转到状态 54


状态 45

   64 PrimaryExp: LPAREN . ConstExp RPAREN

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    ConstExp    转到状态 77


状态 46

   28 VarDef: IDENTIFIER LOP_ASSIGN InitVal .

    $default  使用规则 28 以归约 (VarDef)


状态 47

   65 PrimaryExp: LVal .

    $default  使用规则 65 以归约 (PrimaryExp)


状态 48

   68 UnaryExp: PrimaryExp .

    $default  使用规则 68 以归约 (UnaryExp)


状态 49

   66 PrimaryExp: Number .

    $default  使用规则 66 以归约 (PrimaryExp)


状态 50

   77 MulExp: UnaryExp .

    $default  使用规则 77 以归约 (MulExp)


状态 51

   71 UnaryExp: UnaryOp . UnaryExp

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 78
    UnaryOp     转到状态 51


状态 52

   78 MulExp: MulExp . MUL UnaryExp
   79       | MulExp . DIV UnaryExp
   80       | MulExp . MOD UnaryExp
   81 AddExp: MulExp .

    MUL  偏移，并进入状态 79
    DIV  偏移，并进入状态 80
    MOD  偏移，并进入状态 81

    $default  使用规则 81 以归约 (AddExp)


状态 53

   82 AddExp: AddExp . ADD MulExp
   83       | AddExp . MINUS MulExp
   96 ConstExp: AddExp .

    ADD    偏移，并进入状态 82
    MINUS  偏移，并进入状态 83

    $default  使用规则 96 以归约 (ConstExp)


状态 54

   32 InitVal: ConstExp .

    $default  使用规则 32 以归约 (InitVal)


状态 55

   35 FuncDef: BType IDENTIFIER LPAREN RPAREN . Block

    LBRACE  偏移，并进入状态 62

    Block  转到状态 84


状态 56

   37 FuncDef: BType IDENTIFIER LPAREN FuncFParams . RPAREN Block
   40 FuncFParams: FuncFParams . COMMA FuncFParam

    COMMA   偏移，并进入状态 65
    RPAREN  偏移，并进入状态 85


状态 57

   17 ArrayIndex: '[' ConstExp . ']'

    ']'  偏移，并进入状态 86


状态 58

   29 VarDef: IDENTIFIER ArrayIndexs LOP_ASSIGN . InitVal

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LBRACE      偏移，并进入状态 44
    LPAREN      偏移，并进入状态 45

    InitVal     转到状态 87
    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    ConstExp    转到状态 54


状态 59

   16 ArrayIndexs: ArrayIndexs ArrayIndex .

    $default  使用规则 16 以归约 (ArrayIndexs)


状态 60

   26 VarDef: IDENTIFIER .
   27       | IDENTIFIER . ArrayIndexs
   28       | IDENTIFIER . LOP_ASSIGN InitVal
   29       | IDENTIFIER . ArrayIndexs LOP_ASSIGN InitVal

    LOP_ASSIGN  偏移，并进入状态 24
    '['         偏移，并进入状态 26

    $default  使用规则 26 以归约 (VarDef)

    ArrayIndexs  转到状态 27
    ArrayIndex   转到状态 28


状态 61

   25 VarDefs: VarDefs COMMA VarDef .

    $default  使用规则 25 以归约 (VarDefs)


状态 62

   44 Block: LBRACE . BlockItems RBRACE
   45      | LBRACE . RBRACE

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 88
    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    CONST       偏移，并进入状态 5
    IF          偏移，并进入状态 89
    WHILE       偏移，并进入状态 90
    BREAK       偏移，并进入状态 91
    CONTINUE    偏移，并进入状态 92
    RETURN      偏移，并进入状态 93
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LBRACE      偏移，并进入状态 62
    RBRACE      偏移，并进入状态 94
    LPAREN      偏移，并进入状态 45

    Decl        转到状态 95
    ConstDecl   转到状态 8
    BType       转到状态 96
    VarDecl     转到状态 10
    Block       转到状态 97
    BlockItems  转到状态 98
    BlockItem   转到状态 99
    Stmt        转到状态 100
    LVal        转到状态 101
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    ConstExp    转到状态 102


状态 63

   36 FuncDef: T_VOID IDENTIFIER LPAREN RPAREN Block .

    $default  使用规则 36 以归约 (FuncDef)


状态 64

   41 FuncFParam: BType IDENTIFIER .
   42           | BType IDENTIFIER . '[' ']'
   43           | BType IDENTIFIER . '[' ']' ArrayIndexs

    '['  偏移，并进入状态 103

    $default  使用规则 41 以归约 (FuncFParam)


状态 65

   40 FuncFParams: FuncFParams COMMA . FuncFParam

    T_CHAR    偏移，并进入状态 1
    T_INT     偏移，并进入状态 2
    T_STRING  偏移，并进入状态 3

    BType       转到状态 32
    FuncFParam  转到状态 104


状态 66

   38 FuncDef: T_VOID IDENTIFIER LPAREN FuncFParams RPAREN . Block

    LBRACE  偏移，并进入状态 62

    Block  转到状态 105


状态 67

   21 ConstInitVal: LBRACE . RBRACE
   22             | LBRACE . ConstInitVals RBRACE

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LBRACE      偏移，并进入状态 67
    RBRACE      偏移，并进入状态 106
    LPAREN      偏移，并进入状态 45

    ConstInitVals  转到状态 107
    ConstInitVal   转到状态 108
    LVal           转到状态 47
    PrimaryExp     转到状态 48
    Number         转到状态 49
    UnaryExp       转到状态 50
    UnaryOp        转到状态 51
    MulExp         转到状态 52
    AddExp         转到状态 53
    ConstExp       转到状态 69


状态 68

   13 ConstDef: IDENTIFIER LOP_ASSIGN ConstInitVal .

    $default  使用规则 13 以归约 (ConstDef)


状态 69

   20 ConstInitVal: ConstExp .

    $default  使用规则 20 以归约 (ConstInitVal)


状态 70

   14 ConstDef: IDENTIFIER ArrayIndexs LOP_ASSIGN . ConstInitVal

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LBRACE      偏移，并进入状态 67
    LPAREN      偏移，并进入状态 45

    ConstInitVal  转到状态 109
    LVal          转到状态 47
    PrimaryExp    转到状态 48
    Number        转到状态 49
    UnaryExp      转到状态 50
    UnaryOp       转到状态 51
    MulExp        转到状态 52
    AddExp        转到状态 53
    ConstExp      转到状态 69


状态 71

   12 ConstDefs: ConstDefs COMMA ConstDef .

    $default  使用规则 12 以归约 (ConstDefs)


状态 72

   69 UnaryExp: IDENTIFIER LPAREN . RPAREN
   70         | IDENTIFIER LPAREN . FuncRParams RPAREN

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45
    RPAREN      偏移，并进入状态 110

    LVal         转到状态 47
    PrimaryExp   转到状态 48
    Number       转到状态 49
    UnaryExp     转到状态 50
    UnaryOp      转到状态 51
    FuncRParams  转到状态 111
    MulExp       转到状态 52
    AddExp       转到状态 53
    ConstExp     转到状态 112


状态 73

   16 ArrayIndexs: ArrayIndexs . ArrayIndex
   63 LVal: IDENTIFIER ArrayIndexs .

    '['  偏移，并进入状态 26

    $default  使用规则 63 以归约 (LVal)

    ArrayIndex  转到状态 59


状态 74

   33 InitVal: LBRACE RBRACE .

    $default  使用规则 33 以归约 (InitVal)


状态 75

   31 InitVals: InitVals . COMMA InitVal
   34 InitVal: LBRACE InitVals . RBRACE

    COMMA   偏移，并进入状态 113
    RBRACE  偏移，并进入状态 114


状态 76

   30 InitVals: InitVal .

    $default  使用规则 30 以归约 (InitVals)


状态 77

   64 PrimaryExp: LPAREN ConstExp . RPAREN

    RPAREN  偏移，并进入状态 115


状态 78

   71 UnaryExp: UnaryOp UnaryExp .

    $default  使用规则 71 以归约 (UnaryExp)


状态 79

   78 MulExp: MulExp MUL . UnaryExp

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 116
    UnaryOp     转到状态 51


状态 80

   79 MulExp: MulExp DIV . UnaryExp

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 117
    UnaryOp     转到状态 51


状态 81

   80 MulExp: MulExp MOD . UnaryExp

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 118
    UnaryOp     转到状态 51


状态 82

   82 AddExp: AddExp ADD . MulExp

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 119


状态 83

   83 AddExp: AddExp MINUS . MulExp

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 120


状态 84

   35 FuncDef: BType IDENTIFIER LPAREN RPAREN Block .

    $default  使用规则 35 以归约 (FuncDef)


状态 85

   37 FuncDef: BType IDENTIFIER LPAREN FuncFParams RPAREN . Block

    LBRACE  偏移，并进入状态 62

    Block  转到状态 121


状态 86

   17 ArrayIndex: '[' ConstExp ']' .

    $default  使用规则 17 以归约 (ArrayIndex)


状态 87

   29 VarDef: IDENTIFIER ArrayIndexs LOP_ASSIGN InitVal .

    $default  使用规则 29 以归约 (VarDef)


状态 88

   51 Stmt: SEMICOLON .

    $default  使用规则 51 以归约 (Stmt)


状态 89

   54 Stmt: IF . LPAREN Cond RPAREN Stmt
   55     | IF . LPAREN Cond RPAREN Stmt ELSE Stmt

    LPAREN  偏移，并进入状态 122


状态 90

   56 Stmt: WHILE . LPAREN Cond RPAREN Stmt

    LPAREN  偏移，并进入状态 123


状态 91

   57 Stmt: BREAK . SEMICOLON

    SEMICOLON  偏移，并进入状态 124


状态 92

   58 Stmt: CONTINUE . SEMICOLON

    SEMICOLON  偏移，并进入状态 125


状态 93

   59 Stmt: RETURN . SEMICOLON
   60     | RETURN . ConstExp SEMICOLON

    SEMICOLON   偏移，并进入状态 126
    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    ConstExp    转到状态 127


状态 94

   45 Block: LBRACE RBRACE .

    $default  使用规则 45 以归约 (Block)


状态 95

   48 BlockItem: Decl .

    $default  使用规则 48 以归约 (BlockItem)


状态 96

   23 VarDecl: BType . VarDefs SEMICOLON

    IDENTIFIER  偏移，并进入状态 60

    VarDefs  转到状态 18
    VarDef   转到状态 19


状态 97

   53 Stmt: Block .

    $default  使用规则 53 以归约 (Stmt)


状态 98

   44 Block: LBRACE BlockItems . RBRACE
   47 BlockItems: BlockItems . BlockItem

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_STRING    偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 88
    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    CONST       偏移，并进入状态 5
    IF          偏移，并进入状态 89
    WHILE       偏移，并进入状态 90
    BREAK       偏移，并进入状态 91
    CONTINUE    偏移，并进入状态 92
    RETURN      偏移，并进入状态 93
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LBRACE      偏移，并进入状态 62
    RBRACE      偏移，并进入状态 128
    LPAREN      偏移，并进入状态 45

    Decl        转到状态 95
    ConstDecl   转到状态 8
    BType       转到状态 96
    VarDecl     转到状态 10
    Block       转到状态 97
    BlockItem   转到状态 129
    Stmt        转到状态 100
    LVal        转到状态 101
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    ConstExp    转到状态 102


状态 99

   46 BlockItems: BlockItem .

    $default  使用规则 46 以归约 (BlockItems)


状态 100

   49 BlockItem: Stmt .

    $default  使用规则 49 以归约 (BlockItem)


状态 101

   50 Stmt: LVal . LOP_ASSIGN ConstExp SEMICOLON
   65 PrimaryExp: LVal .

    LOP_ASSIGN  偏移，并进入状态 130

    $default  使用规则 65 以归约 (PrimaryExp)


状态 102

   52 Stmt: ConstExp . SEMICOLON

    SEMICOLON  偏移，并进入状态 131


状态 103

   42 FuncFParam: BType IDENTIFIER '[' . ']'
   43           | BType IDENTIFIER '[' . ']' ArrayIndexs

    ']'  偏移，并进入状态 132


状态 104

   40 FuncFParams: FuncFParams COMMA FuncFParam .

    $default  使用规则 40 以归约 (FuncFParams)


状态 105

   38 FuncDef: T_VOID IDENTIFIER LPAREN FuncFParams RPAREN Block .

    $default  使用规则 38 以归约 (FuncDef)


状态 106

   21 ConstInitVal: LBRACE RBRACE .

    $default  使用规则 21 以归约 (ConstInitVal)


状态 107

   19 ConstInitVals: ConstInitVals . COMMA ConstInitVal
   22 ConstInitVal: LBRACE ConstInitVals . RBRACE

    COMMA   偏移，并进入状态 133
    RBRACE  偏移，并进入状态 134


状态 108

   18 ConstInitVals: ConstInitVal .

    $default  使用规则 18 以归约 (ConstInitVals)


状态 109

   14 ConstDef: IDENTIFIER ArrayIndexs LOP_ASSIGN ConstInitVal .

    $default  使用规则 14 以归约 (ConstDef)


状态 110

   69 UnaryExp: IDENTIFIER LPAREN RPAREN .

    $default  使用规则 69 以归约 (UnaryExp)


状态 111

   70 UnaryExp: IDENTIFIER LPAREN FuncRParams . RPAREN
   76 FuncRParams: FuncRParams . COMMA ConstExp

    COMMA   偏移，并进入状态 135
    RPAREN  偏移，并进入状态 136


状态 112

   75 FuncRParams: ConstExp .

    $default  使用规则 75 以归约 (FuncRParams)


状态 113

   31 InitVals: InitVals COMMA . InitVal

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LBRACE      偏移，并进入状态 44
    LPAREN      偏移，并进入状态 45

    InitVal     转到状态 137
    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    ConstExp    转到状态 54


状态 114

   34 InitVal: LBRACE InitVals RBRACE .

    $default  使用规则 34 以归约 (InitVal)


状态 115

   64 PrimaryExp: LPAREN ConstExp RPAREN .

    $default  使用规则 64 以归约 (PrimaryExp)


状态 116

   78 MulExp: MulExp MUL UnaryExp .

    $default  使用规则 78 以归约 (MulExp)


状态 117

   79 MulExp: MulExp DIV UnaryExp .

    $default  使用规则 79 以归约 (MulExp)


状态 118

   80 MulExp: MulExp MOD UnaryExp .

    $default  使用规则 80 以归约 (MulExp)


状态 119

   78 MulExp: MulExp . MUL UnaryExp
   79       | MulExp . DIV UnaryExp
   80       | MulExp . MOD UnaryExp
   82 AddExp: AddExp ADD MulExp .

    MUL  偏移，并进入状态 79
    DIV  偏移，并进入状态 80
    MOD  偏移，并进入状态 81

    $default  使用规则 82 以归约 (AddExp)


状态 120

   78 MulExp: MulExp . MUL UnaryExp
   79       | MulExp . DIV UnaryExp
   80       | MulExp . MOD UnaryExp
   83 AddExp: AddExp MINUS MulExp .

    MUL  偏移，并进入状态 79
    DIV  偏移，并进入状态 80
    MOD  偏移，并进入状态 81

    $default  使用规则 83 以归约 (AddExp)


状态 121

   37 FuncDef: BType IDENTIFIER LPAREN FuncFParams RPAREN Block .

    $default  使用规则 37 以归约 (FuncDef)


状态 122

   54 Stmt: IF LPAREN . Cond RPAREN Stmt
   55     | IF LPAREN . Cond RPAREN Stmt ELSE Stmt

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    Cond        转到状态 138
    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 139
    RelExp      转到状态 140
    EqExp       转到状态 141
    LAndExp     转到状态 142
    LOrExp      转到状态 143


状态 123

   56 Stmt: WHILE LPAREN . Cond RPAREN Stmt

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    Cond        转到状态 144
    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 139
    RelExp      转到状态 140
    EqExp       转到状态 141
    LAndExp     转到状态 142
    LOrExp      转到状态 143


状态 124

   57 Stmt: BREAK SEMICOLON .

    $default  使用规则 57 以归约 (Stmt)


状态 125

   58 Stmt: CONTINUE SEMICOLON .

    $default  使用规则 58 以归约 (Stmt)


状态 126

   59 Stmt: RETURN SEMICOLON .

    $default  使用规则 59 以归约 (Stmt)


状态 127

   60 Stmt: RETURN ConstExp . SEMICOLON

    SEMICOLON  偏移，并进入状态 145


状态 128

   44 Block: LBRACE BlockItems RBRACE .

    $default  使用规则 44 以归约 (Block)


状态 129

   47 BlockItems: BlockItems BlockItem .

    $default  使用规则 47 以归约 (BlockItems)


状态 130

   50 Stmt: LVal LOP_ASSIGN . ConstExp SEMICOLON

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    ConstExp    转到状态 146


状态 131

   52 Stmt: ConstExp SEMICOLON .

    $default  使用规则 52 以归约 (Stmt)


状态 132

   42 FuncFParam: BType IDENTIFIER '[' ']' .
   43           | BType IDENTIFIER '[' ']' . ArrayIndexs

    '['  偏移，并进入状态 26

    $default  使用规则 42 以归约 (FuncFParam)

    ArrayIndexs  转到状态 147
    ArrayIndex   转到状态 28


状态 133

   19 ConstInitVals: ConstInitVals COMMA . ConstInitVal

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LBRACE      偏移，并进入状态 67
    LPAREN      偏移，并进入状态 45

    ConstInitVal  转到状态 148
    LVal          转到状态 47
    PrimaryExp    转到状态 48
    Number        转到状态 49
    UnaryExp      转到状态 50
    UnaryOp       转到状态 51
    MulExp        转到状态 52
    AddExp        转到状态 53
    ConstExp      转到状态 69


状态 134

   22 ConstInitVal: LBRACE ConstInitVals RBRACE .

    $default  使用规则 22 以归约 (ConstInitVal)


状态 135

   76 FuncRParams: FuncRParams COMMA . ConstExp

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    ConstExp    转到状态 149


状态 136

   70 UnaryExp: IDENTIFIER LPAREN FuncRParams RPAREN .

    $default  使用规则 70 以归约 (UnaryExp)


状态 137

   31 InitVals: InitVals COMMA InitVal .

    $default  使用规则 31 以归约 (InitVals)


状态 138

   54 Stmt: IF LPAREN Cond . RPAREN Stmt
   55     | IF LPAREN Cond . RPAREN Stmt ELSE Stmt

    RPAREN  偏移，并进入状态 150


状态 139

   82 AddExp: AddExp . ADD MulExp
   83       | AddExp . MINUS MulExp
   84 RelExp: AddExp .

    ADD    偏移，并进入状态 82
    MINUS  偏移，并进入状态 83

    $default  使用规则 84 以归约 (RelExp)


状态 140

   85 RelExp: RelExp . LS AddExp
   86       | RelExp . GT AddExp
   87       | RelExp . LE AddExp
   88       | RelExp . GE AddExp
   89 EqExp: RelExp .

    LS  偏移，并进入状态 151
    GT  偏移，并进入状态 152
    LE  偏移，并进入状态 153
    GE  偏移，并进入状态 154

    $default  使用规则 89 以归约 (EqExp)


状态 141

   90 EqExp: EqExp . EQ RelExp
   91      | EqExp . NE RelExp
   92 LAndExp: EqExp .

    EQ  偏移，并进入状态 155
    NE  偏移，并进入状态 156

    $default  使用规则 92 以归约 (LAndExp)


状态 142

   93 LAndExp: LAndExp . AND EqExp
   94 LOrExp: LAndExp .

    AND  偏移，并进入状态 157

    $default  使用规则 94 以归约 (LOrExp)


状态 143

   61 Cond: LOrExp .
   95 LOrExp: LOrExp . OR LAndExp

    OR  偏移，并进入状态 158

    $default  使用规则 61 以归约 (Cond)


状态 144

   56 Stmt: WHILE LPAREN Cond . RPAREN Stmt

    RPAREN  偏移，并进入状态 159


状态 145

   60 Stmt: RETURN ConstExp SEMICOLON .

    $default  使用规则 60 以归约 (Stmt)


状态 146

   50 Stmt: LVal LOP_ASSIGN ConstExp . SEMICOLON

    SEMICOLON  偏移，并进入状态 160


状态 147

   16 ArrayIndexs: ArrayIndexs . ArrayIndex
   43 FuncFParam: BType IDENTIFIER '[' ']' ArrayIndexs .

    '['  偏移，并进入状态 26

    $default  使用规则 43 以归约 (FuncFParam)

    ArrayIndex  转到状态 59


状态 148

   19 ConstInitVals: ConstInitVals COMMA ConstInitVal .

    $default  使用规则 19 以归约 (ConstInitVals)


状态 149

   76 FuncRParams: FuncRParams COMMA ConstExp .

    $default  使用规则 76 以归约 (FuncRParams)


状态 150

   54 Stmt: IF LPAREN Cond RPAREN . Stmt
   55     | IF LPAREN Cond RPAREN . Stmt ELSE Stmt

    SEMICOLON   偏移，并进入状态 88
    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    IF          偏移，并进入状态 89
    WHILE       偏移，并进入状态 90
    BREAK       偏移，并进入状态 91
    CONTINUE    偏移，并进入状态 92
    RETURN      偏移，并进入状态 93
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LBRACE      偏移，并进入状态 62
    LPAREN      偏移，并进入状态 45

    Block       转到状态 97
    Stmt        转到状态 161
    LVal        转到状态 101
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    ConstExp    转到状态 102


状态 151

   85 RelExp: RelExp LS . AddExp

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 162


状态 152

   86 RelExp: RelExp GT . AddExp

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 163


状态 153

   87 RelExp: RelExp LE . AddExp

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 164


状态 154

   88 RelExp: RelExp GE . AddExp

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 165


状态 155

   90 EqExp: EqExp EQ . RelExp

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 139
    RelExp      转到状态 166


状态 156

   91 EqExp: EqExp NE . RelExp

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 139
    RelExp      转到状态 167


状态 157

   93 LAndExp: LAndExp AND . EqExp

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 139
    RelExp      转到状态 140
    EqExp       转到状态 168


状态 158

   95 LOrExp: LOrExp OR . LAndExp

    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LPAREN      偏移，并进入状态 45

    LVal        转到状态 47
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 139
    RelExp      转到状态 140
    EqExp       转到状态 141
    LAndExp     转到状态 169


状态 159

   56 Stmt: WHILE LPAREN Cond RPAREN . Stmt

    SEMICOLON   偏移，并进入状态 88
    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    IF          偏移，并进入状态 89
    WHILE       偏移，并进入状态 90
    BREAK       偏移，并进入状态 91
    CONTINUE    偏移，并进入状态 92
    RETURN      偏移，并进入状态 93
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LBRACE      偏移，并进入状态 62
    LPAREN      偏移，并进入状态 45

    Block       转到状态 97
    Stmt        转到状态 170
    LVal        转到状态 101
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    ConstExp    转到状态 102


状态 160

   50 Stmt: LVal LOP_ASSIGN ConstExp SEMICOLON .

    $default  使用规则 50 以归约 (Stmt)


状态 161

   54 Stmt: IF LPAREN Cond RPAREN Stmt .
   55     | IF LPAREN Cond RPAREN Stmt . ELSE Stmt

    ELSE  偏移，并进入状态 171

    ELSE      [使用规则 54 以归约 (Stmt)]
    $default  使用规则 54 以归约 (Stmt)


状态 162

   82 AddExp: AddExp . ADD MulExp
   83       | AddExp . MINUS MulExp
   85 RelExp: RelExp LS AddExp .

    ADD    偏移，并进入状态 82
    MINUS  偏移，并进入状态 83

    $default  使用规则 85 以归约 (RelExp)


状态 163

   82 AddExp: AddExp . ADD MulExp
   83       | AddExp . MINUS MulExp
   86 RelExp: RelExp GT AddExp .

    ADD    偏移，并进入状态 82
    MINUS  偏移，并进入状态 83

    $default  使用规则 86 以归约 (RelExp)


状态 164

   82 AddExp: AddExp . ADD MulExp
   83       | AddExp . MINUS MulExp
   87 RelExp: RelExp LE AddExp .

    ADD    偏移，并进入状态 82
    MINUS  偏移，并进入状态 83

    $default  使用规则 87 以归约 (RelExp)


状态 165

   82 AddExp: AddExp . ADD MulExp
   83       | AddExp . MINUS MulExp
   88 RelExp: RelExp GE AddExp .

    ADD    偏移，并进入状态 82
    MINUS  偏移，并进入状态 83

    $default  使用规则 88 以归约 (RelExp)


状态 166

   85 RelExp: RelExp . LS AddExp
   86       | RelExp . GT AddExp
   87       | RelExp . LE AddExp
   88       | RelExp . GE AddExp
   90 EqExp: EqExp EQ RelExp .

    LS  偏移，并进入状态 151
    GT  偏移，并进入状态 152
    LE  偏移，并进入状态 153
    GE  偏移，并进入状态 154

    $default  使用规则 90 以归约 (EqExp)


状态 167

   85 RelExp: RelExp . LS AddExp
   86       | RelExp . GT AddExp
   87       | RelExp . LE AddExp
   88       | RelExp . GE AddExp
   91 EqExp: EqExp NE RelExp .

    LS  偏移，并进入状态 151
    GT  偏移，并进入状态 152
    LE  偏移，并进入状态 153
    GE  偏移，并进入状态 154

    $default  使用规则 91 以归约 (EqExp)


状态 168

   90 EqExp: EqExp . EQ RelExp
   91      | EqExp . NE RelExp
   93 LAndExp: LAndExp AND EqExp .

    EQ  偏移，并进入状态 155
    NE  偏移，并进入状态 156

    $default  使用规则 93 以归约 (LAndExp)


状态 169

   93 LAndExp: LAndExp . AND EqExp
   95 LOrExp: LOrExp OR LAndExp .

    AND  偏移，并进入状态 157

    $default  使用规则 95 以归约 (LOrExp)


状态 170

   56 Stmt: WHILE LPAREN Cond RPAREN Stmt .

    $default  使用规则 56 以归约 (Stmt)


状态 171

   55 Stmt: IF LPAREN Cond RPAREN Stmt ELSE . Stmt

    SEMICOLON   偏移，并进入状态 88
    IDENTIFIER  偏移，并进入状态 39
    INTEGER     偏移，并进入状态 40
    IF          偏移，并进入状态 89
    WHILE       偏移，并进入状态 90
    BREAK       偏移，并进入状态 91
    CONTINUE    偏移，并进入状态 92
    RETURN      偏移，并进入状态 93
    ADD         偏移，并进入状态 41
    MINUS       偏移，并进入状态 42
    NOT         偏移，并进入状态 43
    LBRACE      偏移，并进入状态 62
    LPAREN      偏移，并进入状态 45

    Block       转到状态 97
    Stmt        转到状态 172
    LVal        转到状态 101
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    ConstExp    转到状态 102


状态 172

   55 Stmt: IF LPAREN Cond RPAREN Stmt ELSE Stmt .

    $default  使用规则 55 以归约 (Stmt)
